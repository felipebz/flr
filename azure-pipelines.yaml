pool:
  vmImage: 'ubuntu-latest'

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.cache/.gradle
  SONAR_USER_HOME: $(Pipeline.Workspace)/.cache/.sonar
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

steps:
  - task: DownloadSecureFile@1
    condition: and(succeeded(), eq(variables.isMain, 'true'))
    name: gpgKey
    inputs:
      secureFile: 'secring.gpg'

  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | **/build.gradle.kts'
      path: $(Pipeline.Workspace)/.cache

  - task: SonarQubePrepare@4
    condition: and(succeeded(), eq(variables.isMain, 'true'))
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'Other'

  - task: Gradle@2
    inputs:
      tasks: 'build'
      options: '--build-cache -Dsonar.branch.name='
      jdkVersionOption: 1.11
      sonarQubeRunAnalysis: eq(variables.isMain, 'true')

  - task: Gradle@2
    condition: and(succeeded(), eq(variables.isMain, 'true'))
    inputs:
      tasks: 'publish'
      options: '--build-cache -Psigning.secretKeyRingFile=$(gpgKey.secureFilePath) -Psigning.keyId=$(GPG_KEY_ID) -Psigning.password=$(GPG_KEY_PASSWORD)'
      jdkVersionOption: 1.11
    env:
      DEPLOY_USERNAME: $(DEPLOY_USERNAME)
      DEPLOY_TOKEN: $(DEPLOY_TOKEN)
      OSSRH_USERNAME: $(OSSRH_USERNAME)
      OSSRH_PASSWORD: $(OSSRH_PASSWORD)

  - script: |
      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
      ./gradlew --stop
